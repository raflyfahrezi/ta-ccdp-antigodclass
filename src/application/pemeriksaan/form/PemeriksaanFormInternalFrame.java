/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package application.pemeriksaan.form;

import application.base.BaseDataTableFrame;
import application.dokter.form.DokterFormInternalFrame;
import application.menu.MenuFrame;
import application.pasien.form.PasienFormInternalFrame;
import application.pemeriksaan.Pemeriksaan;
import application.pemeriksaan.PemeriksaanInternalFrame;
import application.pemeriksaan.form.tercatat.Tercatat;
import application.pemeriksaan.form.tercatat.TercatatFormInternalFrame;
import application.pemeriksaan.form.tindak.Tindak;
import application.pemeriksaan.form.tindak.TindakFormInternalFrame;
import java.util.Date;
import java.util.LinkedList;
import java.util.ListIterator;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import application.util.Callback;
import application.util.CallbackReturn;

/**
 *
 * @author Azis Naufal
 */
public class PemeriksaanFormInternalFrame extends BaseDataTableFrame implements PemeriksaanFormView {
    private static PemeriksaanFormInternalFrame instance = null;
    private PemeriksaanFormPresenter presenter = null;
    private DefaultTableModel dtmTindakan = null;
    private DefaultTableModel dtmObat = null;

    /**
     * Creates new form DokterInternalFrame
     */
    private PemeriksaanFormInternalFrame(Pemeriksaan pemeriksaan) {
        presenter = new PemeriksaanFormPresenter(this);
        initComponents();
        setWaitCursor();
        presenter.loadDokter();
        presenter.loadPasien();
        if (pemeriksaan != null){
            presenter.setPemeriksaan(pemeriksaan);
            setTitle("Ubah Data Pemeriksaan");
        }
        setDefaultCursor();
    }
    
    public static PemeriksaanFormInternalFrame getInstance(Pemeriksaan pemeriksaan){
        if (instance == null){
            instance = new PemeriksaanFormInternalFrame(pemeriksaan);
        }
        return instance;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnKembali = new javax.swing.JButton();
        lblNama = new javax.swing.JLabel();
        lblSpesialis = new javax.swing.JLabel();
        btnSimpan = new javax.swing.JButton();
        cbxDokter = new javax.swing.JComboBox<>();
        cbxPasien = new javax.swing.JComboBox<>();
        btnTambahDokter = new javax.swing.JButton();
        btnTambahPasien = new javax.swing.JButton();
        btnRefreshDokter = new javax.swing.JButton();
        btnRefreshPasien = new javax.swing.JButton();
        lblTanggal = new javax.swing.JLabel();
        dchTanggalPemeriksaan = new com.toedter.calendar.JDateChooser();
        lblTinggiBadan = new javax.swing.JLabel();
        txtBeratBadan = new javax.swing.JFormattedTextField();
        lblBeratBadan = new javax.swing.JLabel();
        txtTinggiBadan = new javax.swing.JFormattedTextField();
        lblKetBeratBadan = new javax.swing.JLabel();
        lblKetTinggiBadan = new javax.swing.JLabel();
        lblSistolik = new javax.swing.JLabel();
        lblDiastolik = new javax.swing.JLabel();
        spSistolik = new javax.swing.JSpinner();
        spDiastolik = new javax.swing.JSpinner();
        pnlObat = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblObat = new javax.swing.JTable();
        btnTambahObat = new javax.swing.JButton();
        btnHapusObat = new javax.swing.JButton();
        btnUbahObat = new javax.swing.JButton();
        pnlTindakan = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTindakan = new javax.swing.JTable();
        btnTambahTindakan = new javax.swing.JButton();
        btnHapusTindakan = new javax.swing.JButton();
        btnUbahTindakan = new javax.swing.JButton();
        lblSpesialis8 = new javax.swing.JLabel();
        txtTotalBiaya = new javax.swing.JFormattedTextField();

        btnKembali.setMnemonic('t');
        btnKembali.setText("Kembali");
        btnKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKembaliActionPerformed(evt);
            }
        });

        lblNama.setText("Nama Dokter");

        lblSpesialis.setText("Nama Pasien");

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        cbxDokter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxDokterActionPerformed(evt);
            }
        });

        cbxPasien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxPasienActionPerformed(evt);
            }
        });

        btnTambahDokter.setText("+");
        btnTambahDokter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahDokterActionPerformed(evt);
            }
        });

        btnTambahPasien.setText("+");
        btnTambahPasien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahPasienActionPerformed(evt);
            }
        });

        btnRefreshDokter.setText("↻");
        btnRefreshDokter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshDokterActionPerformed(evt);
            }
        });

        btnRefreshPasien.setText("↻");
        btnRefreshPasien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshPasienActionPerformed(evt);
            }
        });

        lblTanggal.setText("Tanggal Pemeriksaan");

        dchTanggalPemeriksaan.setDateFormatString("dd MMMM yyyy");

        lblTinggiBadan.setText("Tinggi Badan");

        txtBeratBadan.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtBeratBadan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBeratBadanKeyReleased(evt);
            }
        });

        lblBeratBadan.setText("Berat Badan");

        txtTinggiBadan.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtTinggiBadan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTinggiBadanKeyReleased(evt);
            }
        });

        lblKetBeratBadan.setText("cm (gunakan titik untuk pecahan)");

        lblKetTinggiBadan.setText("kg (gunakan titik untuk pecahan)");

        lblSistolik.setText("Sistolik");

        lblDiastolik.setText("Diastolik");

        spSistolik.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        spDiastolik.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        pnlObat.setBorder(javax.swing.BorderFactory.createTitledBorder("Obat"));

        tblObat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama Obat", "Jumlah", "Harga", "Subtotal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblObat.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblObat.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblObat);

        btnTambahObat.setText("+");
        btnTambahObat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahObatActionPerformed(evt);
            }
        });

        btnHapusObat.setText("-");
        btnHapusObat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusObatActionPerformed(evt);
            }
        });

        btnUbahObat.setText("✎");
        btnUbahObat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahObatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlObatLayout = new javax.swing.GroupLayout(pnlObat);
        pnlObat.setLayout(pnlObatLayout);
        pnlObatLayout.setHorizontalGroup(
            pnlObatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlObatLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlObatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnTambahObat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnHapusObat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUbahObat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlObatLayout.setVerticalGroup(
            pnlObatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlObatLayout.createSequentialGroup()
                .addComponent(btnTambahObat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnHapusObat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUbahObat)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        pnlTindakan.setBorder(javax.swing.BorderFactory.createTitledBorder("Tindakan"));

        tblTindakan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama Tindakan", "Harga"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTindakan.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblTindakan.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tblTindakan);

        btnTambahTindakan.setText("+");
        btnTambahTindakan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahTindakanActionPerformed(evt);
            }
        });

        btnHapusTindakan.setText("-");
        btnHapusTindakan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusTindakanActionPerformed(evt);
            }
        });

        btnUbahTindakan.setText("✎");
        btnUbahTindakan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahTindakanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTindakanLayout = new javax.swing.GroupLayout(pnlTindakan);
        pnlTindakan.setLayout(pnlTindakanLayout);
        pnlTindakanLayout.setHorizontalGroup(
            pnlTindakanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTindakanLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTindakanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTindakanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnTambahTindakan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnHapusTindakan, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnUbahTindakan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        pnlTindakanLayout.setVerticalGroup(
            pnlTindakanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(pnlTindakanLayout.createSequentialGroup()
                .addComponent(btnTambahTindakan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnHapusTindakan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUbahTindakan)
                .addGap(0, 161, Short.MAX_VALUE))
        );

        lblSpesialis8.setText("Total Biaya");

        txtTotalBiaya.setEditable(false);
        txtTotalBiaya.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#.##"))));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(pnlObat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pnlTindakan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnKembali, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(13, 13, 13))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblSpesialis8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblTanggal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblNama, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(lblSpesialis, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblDiastolik, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblSistolik, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblBeratBadan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblTinggiBadan, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cbxDokter, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(dchTanggalPemeriksaan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                                    .addComponent(cbxPasien, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnTambahPasien)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnRefreshPasien))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnTambahDokter)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnRefreshDokter)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtTotalBiaya, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTinggiBadan, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtBeratBadan, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(spDiastolik, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spSistolik, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblKetTinggiBadan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblKetBeratBadan, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 419, Short.MAX_VALUE)))))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dchTanggalPemeriksaan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblTanggal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNama, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxDokter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTambahDokter)
                    .addComponent(btnRefreshDokter))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSpesialis)
                    .addComponent(cbxPasien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTambahPasien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRefreshPasien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblKetTinggiBadan)
                    .addComponent(txtTinggiBadan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTinggiBadan, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBeratBadan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblKetBeratBadan)
                    .addComponent(lblBeratBadan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSistolik)
                    .addComponent(spSistolik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDiastolik)
                    .addComponent(spDiastolik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotalBiaya, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSpesialis8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlTindakan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlObat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnKembali)
                    .addComponent(btnSimpan))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKembaliActionPerformed
        // TODO add your handling code here:
        back();
    }//GEN-LAST:event_btnKembaliActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        presenter.setSistolik(spSistolik.getValue().toString());
        presenter.setDiastolik(spDiastolik.getValue().toString());
        presenter.setTanggalPemeriksaan(dchTanggalPemeriksaan.getCalendar());
        presenter.validateAndSubmit();
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void cbxDokterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxDokterActionPerformed
        // TODO add your handling code here:
        presenter.setDokter(cbxDokter.getSelectedIndex()-1);
    }//GEN-LAST:event_cbxDokterActionPerformed

    private void cbxPasienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxPasienActionPerformed
        // TODO add your handling code here:
        presenter.setPasien(cbxPasien.getSelectedIndex()-1);
    }//GEN-LAST:event_cbxPasienActionPerformed

    private void btnRefreshDokterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshDokterActionPerformed
        // TODO add your handling code here:
        setWaitCursor();
        presenter.loadDokter();
        setDefaultCursor();
    }//GEN-LAST:event_btnRefreshDokterActionPerformed

    private void btnRefreshPasienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshPasienActionPerformed
        // TODO add your handling code here:
        setWaitCursor();
        presenter.loadPasien();
        setDefaultCursor();
    }//GEN-LAST:event_btnRefreshPasienActionPerformed

    private void btnTambahDokterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahDokterActionPerformed
        // TODO add your handling code here:
        DokterFormInternalFrame dokterFormInternalFrame = new DokterFormInternalFrame(null);
        MenuFrame.getInstance().getDesktopPane().add(dokterFormInternalFrame);
        dokterFormInternalFrame.setCallback(new Callback() {
            @Override
            public void onFinish() {
                presenter.loadDokter();
                setVisible(true);
            }
        });
        setVisible(false);
        dokterFormInternalFrame.setVisible(true);
    }//GEN-LAST:event_btnTambahDokterActionPerformed

    private void btnTambahPasienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahPasienActionPerformed
        // TODO add your handling code here:
        PasienFormInternalFrame pasienFormInternalFrame = new PasienFormInternalFrame(null);
        MenuFrame.getInstance().getDesktopPane().add(pasienFormInternalFrame);
        pasienFormInternalFrame.setCallback(new Callback() {
            @Override
            public void onFinish() {
                presenter.loadPasien();
                setVisible(true);
            }
        });
        setVisible(false);
        pasienFormInternalFrame.setVisible(true);
    }//GEN-LAST:event_btnTambahPasienActionPerformed

    private void btnTambahTindakanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahTindakanActionPerformed
        // TODO add your handling code here:
        TindakFormInternalFrame form = TindakFormInternalFrame.getInstance(null);
        MenuFrame.getInstance().getDesktopPane().add(form);
        form.setCallback(new CallbackReturn() {
            @Override
            public void onFinish(Object result) {
                Tindak callResult = (Tindak) result;
                if (callResult.isSaveRequest()){
                    dtmTindakan = (DefaultTableModel) tblTindakan.getModel();
                    dtmTindakan.addRow(new Object[]{
                        callResult.getNama_tindakan(),
                        "Rp "+callResult.getHarga(),
                    });
                    presenter.calculateTindakan(callResult);
                }
                setVisible(true);
            }
        });
        this.setVisible(false);
        form.setVisible(true);

    }//GEN-LAST:event_btnTambahTindakanActionPerformed

    private void btnHapusTindakanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusTindakanActionPerformed
        // TODO add your handling code here:
        dtmTindakan = (DefaultTableModel) tblTindakan.getModel();
        if (tblTindakan.getSelectedRow() >= 0){
            dtmTindakan.removeRow(tblTindakan.getSelectedRow());
            presenter.removeTindakan(tblTindakan.getSelectedRow());
        }
    }//GEN-LAST:event_btnHapusTindakanActionPerformed

    private void btnTambahObatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahObatActionPerformed
        // TODO add your handling code here:
        TercatatFormInternalFrame form = TercatatFormInternalFrame.getInstance(null);
        MenuFrame.getInstance().getDesktopPane().add(form);
        form.setCallback(new CallbackReturn() {
            @Override
            public void onFinish(Object result) {
                Tercatat callResult = (Tercatat) result;
                if (callResult.isSaveRequest()){
                    dtmObat = (DefaultTableModel) tblObat.getModel();
                    dtmObat.addRow(new Object[]{
                        callResult.getNama_obat(),
                        callResult.getQty(),
                        "Rp "+callResult.getHarga(),
                        "Rp "+callResult.getSubtotal()
                    });
                    presenter.calculateObat((Tercatat) result);
                }
                setVisible(true);
            }
        });
        this.setVisible(false);
        form.setVisible(true);
    }//GEN-LAST:event_btnTambahObatActionPerformed

    private void btnHapusObatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusObatActionPerformed
        // TODO add your handling code here:
        dtmObat = (DefaultTableModel) tblObat.getModel();
        if (tblObat.getSelectedRow() >= 0){
            dtmObat.removeRow(tblObat.getSelectedRow());
            presenter.removeObat(tblObat.getSelectedRow());
        }
    }//GEN-LAST:event_btnHapusObatActionPerformed

    private void btnUbahObatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahObatActionPerformed
        // TODO add your handling code here:
        int row = tblObat.getSelectedRow();
        if (row >= 0){
            TercatatFormInternalFrame form = TercatatFormInternalFrame.getInstance(presenter.getTercatat(row));
            MenuFrame.getInstance().getDesktopPane().add(form);
            form.setCallback(new CallbackReturn() {
                @Override
                public void onFinish(Object result) {
                    Tercatat callResult = (Tercatat) result;
                    if (callResult.isSaveRequest()){
                        tblObat.setValueAt(callResult.getNama_obat(), row, 0);
                        tblObat.setValueAt(callResult.getQty(), row, 1);
                        tblObat.setValueAt("Rp " + callResult.getHarga(), row, 2);
                        tblObat.setValueAt("Rp " + callResult.getSubtotal(), row, 3);
                        presenter.calculateObat((Tercatat) result, row);
                    }
                    setVisible(true);
                }
            });
            this.setVisible(false);
            form.setVisible(true);
        }
    }//GEN-LAST:event_btnUbahObatActionPerformed

    private void btnUbahTindakanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahTindakanActionPerformed
        // TODO add your handling code here:
        int row = tblTindakan.getSelectedRow();
        if (row >= 0){
            TindakFormInternalFrame form = TindakFormInternalFrame.getInstance(presenter.getTindak(row));
            MenuFrame.getInstance().getDesktopPane().add(form);
            form.setCallback(new CallbackReturn() {
                @Override
                public void onFinish(Object result) {
                    Tindak callResult = (Tindak) result;
                    if (callResult.isSaveRequest()){
                        tblTindakan.setValueAt(callResult.getNama_tindakan(), row, 0);
                        tblTindakan.setValueAt("Rp "+callResult.getHarga(), row, 1);
                        presenter.calculateTindakan(callResult, row);
                    }
                    setVisible(true);
                }
            });
            this.setVisible(false);
            form.setVisible(true);
        }
    }//GEN-LAST:event_btnUbahTindakanActionPerformed

    private void txtTinggiBadanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTinggiBadanKeyReleased
        // TODO add your handling code here:
        presenter.setTinggiBadan(txtTinggiBadan.getText());
    }//GEN-LAST:event_txtTinggiBadanKeyReleased

    private void txtBeratBadanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBeratBadanKeyReleased
        // TODO add your handling code here:
        presenter.setBeratBadan(txtBeratBadan.getText());
    }//GEN-LAST:event_txtBeratBadanKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHapusObat;
    private javax.swing.JButton btnHapusTindakan;
    private javax.swing.JButton btnKembali;
    private javax.swing.JButton btnRefreshDokter;
    private javax.swing.JButton btnRefreshPasien;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnTambahDokter;
    private javax.swing.JButton btnTambahObat;
    private javax.swing.JButton btnTambahPasien;
    private javax.swing.JButton btnTambahTindakan;
    private javax.swing.JButton btnUbahObat;
    private javax.swing.JButton btnUbahTindakan;
    private javax.swing.JComboBox<String> cbxDokter;
    private javax.swing.JComboBox<String> cbxPasien;
    private com.toedter.calendar.JDateChooser dchTanggalPemeriksaan;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBeratBadan;
    private javax.swing.JLabel lblDiastolik;
    private javax.swing.JLabel lblKetBeratBadan;
    private javax.swing.JLabel lblKetTinggiBadan;
    private javax.swing.JLabel lblNama;
    private javax.swing.JLabel lblSistolik;
    private javax.swing.JLabel lblSpesialis;
    private javax.swing.JLabel lblSpesialis8;
    private javax.swing.JLabel lblTanggal;
    private javax.swing.JLabel lblTinggiBadan;
    private javax.swing.JPanel pnlObat;
    private javax.swing.JPanel pnlTindakan;
    private javax.swing.JSpinner spDiastolik;
    private javax.swing.JSpinner spSistolik;
    private javax.swing.JTable tblObat;
    private javax.swing.JTable tblTindakan;
    private javax.swing.JFormattedTextField txtBeratBadan;
    private javax.swing.JFormattedTextField txtTinggiBadan;
    private javax.swing.JFormattedTextField txtTotalBiaya;
    // End of variables declaration//GEN-END:variables

    @Override
    protected String setWindowTitle() {
        return "Tambah Data Dokter";
    }

    @Override
    public void showData(Pemeriksaan pemeriksaan, LinkedList<Tindak> tindaks, LinkedList<Tercatat> tercatats) {
        Date date = new Date(pemeriksaan.getTanggal().getTime());
        dchTanggalPemeriksaan.setDate(date);
        cbxDokter.setSelectedItem(pemeriksaan.getNama_dokter());
        cbxPasien.setSelectedItem(pemeriksaan.getNama_pasien());
        txtTinggiBadan.setText(pemeriksaan.getTinggi_badan()+"");
        txtBeratBadan.setText(pemeriksaan.getBerat_badan()+"");
        spSistolik.setValue(pemeriksaan.getSistolik());
        spDiastolik.setValue(pemeriksaan.getDiastolik());
        txtTotalBiaya.setText("Rp " + pemeriksaan.getTotal().toString());
        
        ListIterator iter = tindaks.listIterator();
        while(iter.hasNext()){
            Tindak tindak = (Tindak) iter.next();
            dtmTindakan = (DefaultTableModel) tblTindakan.getModel();
            dtmTindakan.addRow(new Object[]{
                tindak.getNama_tindakan(),
                "Rp "+tindak.getHarga(),
            });
            
        }
        
        iter = tercatats.listIterator();
        while(iter.hasNext()){
            Tercatat tercatat = (Tercatat) iter.next();
            dtmObat = (DefaultTableModel) tblObat.getModel();
            dtmObat.addRow(new Object[]{
                tercatat.getNama_obat(),
                tercatat.getQty(),
                "Rp "+tercatat.getHarga(),
                "Rp "+tercatat.getSubtotal()
            });
        }
        
        presenter.calculateTotal();
    }

    @Override
    public void showSuccess(String s) {
        this.showMessageSuccess(s);
        setDefaultCursor();
    }

    @Override
    public void showError(String s) {
        this.showMessageError(s);
        setDefaultCursor();
    }

    @Override
    public void back() {
        setWaitCursor();
        MenuFrame menuFramee = MenuFrame.getInstance();
        menuFramee.removeOneDesktopPane(PemeriksaanFormInternalFrame.this);
        PemeriksaanInternalFrame.getInstance().setVisible(true);
        PemeriksaanInternalFrame.getInstance().loadData();
        instance = null;
        dispose();
    }

    @Override
    public void loadDokter(String[] dokters) {
        cbxDokter.setModel(new DefaultComboBoxModel<>(dokters));
    }

    @Override
    public void loadPasien(String[] pasiens) {
        cbxPasien.setModel(new DefaultComboBoxModel<>(pasiens));
    }

    @Override
    public void setHargaTindakan(String harga) {
        dtmTindakan = (DefaultTableModel) tblTindakan.getModel();
        dtmTindakan.setValueAt(harga, tblTindakan.getSelectedRow(), 1);
   }

    @Override   
    public void populateObat(String harga, String subtotal) {
        dtmObat = (DefaultTableModel) tblObat.getModel();
        dtmObat.setValueAt(harga, tblObat.getSelectedRow(), 2);
        dtmObat.setValueAt(subtotal, tblObat.getSelectedRow(), 3);
    }

    @Override
    public void showTotal(String total) {
        txtTotalBiaya.setText(total);
    }
}
